Step 6A — i18n setup + language switch

1) Create/overwrite frontend/src/i18n.ts
----------------------------------------
import i18n from "i18next";
import { initReactI18next } from "react-i18next";

const resources = {
  en: {
    translation: {
      app: { name: "CoreVitals" },
      safety: { infoOnly: "Information only — not medical advice.", learnMore: "Learn more" },
      summary: { heading: "Summary", noText: "No text extracted.", showMore: "Show more", showLess: "Show less" },
      table: {
        heading: "Analytes", noRows: "No analytes detected.", value: "Value",
        range: "Reference range", showSources: "Show sources", hideSources: "Hide sources"
      },
      badge: { low: "Low", inRange: "In-range", high: "High" },
      flag: { caution: "Caution", urgent: "Urgent" },
      results: { loadingExplain: "Analyzing values…", partial: "Some items couldn’t be explained." },
      nav: { goUpload: "Go to Upload" },
      upload: { label: "Upload PDF/Image" }
    }
  },
  de: {
    translation: {
      app: { name: "CoreVitals" },
      safety: { infoOnly: "Nur zu Informationszwecken — keine medizinische Beratung.", learnMore: "Mehr erfahren" },
      summary: { heading: "Zusammenfassung", noText: "Kein Text extrahiert.", showMore: "Mehr anzeigen", showLess: "Weniger anzeigen" },
      table: {
        heading: "Analysewerte", noRows: "Keine Werte erkannt.", value: "Wert",
        range: "Referenzbereich", showSources: "Quellen anzeigen", hideSources: "Quellen ausblenden"
      },
      badge: { low: "Niedrig", inRange: "Im Bereich", high: "Hoch" },
      flag: { caution: "Achtung", urgent: "Dringend" },
      results: { loadingExplain: "Werte werden analysiert…", partial: "Einige Werte konnten nicht erklärt werden." },
      nav: { goUpload: "Zum Upload" },
      upload: { label: "PDF/Bild hochladen" }
    }
  }
};

i18n.use(initReactI18next).init({
  resources,
  lng: "en",
  fallbackLng: "en",
  interpolation: { escapeValue: false }
});

export default i18n;

2) Ensure i18n is loaded once. In frontend/src/main.tsx, add at top:
--------------------------------------------------------------------
import "./i18n";

3) Create/overwrite frontend/src/components/LangSwitch.tsx:
-----------------------------------------------------------
import React from "react";
import i18n from "../i18n";

const LangSwitch: React.FC = () => {
  const cur = i18n.language.startsWith("de") ? "de" : "en";
  function toggle() { i18n.changeLanguage(cur === "en" ? "de" : "en"); }
  return (
    <button
      onClick={toggle}
      className="text-sm px-3 py-2 rounded-full border border-gray-200 hover:bg-gray-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500"
      aria-label="Toggle language"
    >
      {cur.toUpperCase()} | {(cur === "en" ? "de" : "en").toUpperCase()}
    </button>
  );
};
export default LangSwitch;
